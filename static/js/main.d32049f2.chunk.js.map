{"version":3,"sources":["api/api.js","component/rating.js","component/dialog.js","component/search.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","API_URL","a","resp","fetch","json","getFilterMoviesByRating","movies","rating","enabled","filter","movie","max","min","vote_average","search","_search","encodeURIComponent","MovieRating","value","onChange","Box","component","mb","borderColor","Rating","name","event","newValue","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DetailDialog","open","handleClose","Dialog","aria-labelledby","id","original_title","dividers","gutterBottom","release_date","overview","useStyles","makeStyles","paper","textAlign","text","secondary","borderRadius","shape","backgroundColor","fade","common","white","width","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","Search","useState","setMovie","detail","openDetail","setRating","currentMovie","setCurrentMovie","isEmptySearch","discover","useQuery","fetchMovies","data","searchMovies","container","InputBase","placeholder","e","target","input","inputProps","Grid","results","map","item","xs","md","sm","Link","href","Paper","elevation","src","poster_path","handleClickOpen","createMuiTheme","type","App","queryClient","QueryClient","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d32049f2.chunk.js","sourcesContent":["const API_KEY = 'dbb2339122a0af02f8339e3049248e82';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport const IMAGES_PATH = 'https://image.tmdb.org/t/p/w500';\nexport async function fetchMovies() {\n    const resp = fetch(`${API_URL}/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc`);\n\n    return (await resp).json()\n}\n\nexport function getFilterMoviesByRating(movies, rating, enabled) {\n    const range = 2;\n    return movies.filter(movie => {\n        if(!enabled) return true;\n        const max = rating * range;\n        const min = max - range;\n        return (movie.vote_average <= max) && (movie.vote_average >= min);\n    });\n}\n\nexport async function searchMovies(search) {\n    const _search = encodeURIComponent(search);\n    const resp = fetch(`${API_URL}/search/movie?api_key=${API_KEY}&query=${_search}`);\n\n    return (await resp).json()\n}","import React from 'react';\nimport Rating from '@material-ui/lab/Rating';\n\nimport Box from '@material-ui/core/Box';\n\nexport default function MovieRating ({ value, onChange }) {\n    \n    return (\n      <div>\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n          <Rating\n            name=\"simple-controlled\"\n            value={value}\n            onChange={(event, newValue) => onChange(newValue) }\n          />\n        </Box>\n      </div>\n    );\n  }","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport default function DetailDialog({ open, handleClose, movie }) {\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n         <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {movie && movie.original_title}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Release Date: {movie && movie.release_date}\n          </Typography>\n          <Typography gutterBottom>\n            {movie && movie.overview}\n          </Typography>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}","import React, {useState} from 'react'\nimport {useQuery} from 'react-query';\nimport { fetchMovies, IMAGES_PATH, searchMovies, getFilterMoviesByRating } from '.././api/api';\nimport Image from 'material-ui-image';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport MovieRating from './rating';\nimport DetailDialog from './dialog';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        margin: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        width: '100%',\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: '#FFF',\n        width: '100%',\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        width: '100%',\n      },\n  }));\n \n\nexport default function Search () {\n    const classes = useStyles();\n    const [movie, setMovie] = useState('');\n    const [detail, openDetail] = useState(false);\n    const [rating, setRating] = useState(4);\n    const [currentMovie, setCurrentMovie] = useState();\n    const isEmptySearch = (movie === '');\n\n    const { data: discover } = useQuery([], () => fetchMovies(), { enabled: isEmptySearch });\n    const { data: movies } = useQuery([movie], () => searchMovies(movie), { enabled:  !isEmptySearch });\n    const data = movies || discover;\n\n    return (\n        <div className={classes.container}>\n            <div>\n                <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                        <SearchIcon />\n                    </div>\n                    <InputBase\n                        placeholder=\"Search…\"\n                        onChange={e => setMovie(e.target.value)} \n                        classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'search' }}\n                    />\n                </div>\n                { !isEmptySearch && <MovieRating value={rating} onChange={setRating} /> }\n          </div>\n            <Grid container spacing={3}>\n                { data && data.results && getFilterMoviesByRating(data.results, rating, !isEmptySearch).map(item => \n                        <Grid key={item.id} item xs={6} md={3} sm={2}>\n                              <Link href=\"#\" onClick={() => {\n                                  setCurrentMovie(item);\n                                  openDetail(true);\n                              }}>\n                                <Paper className={classes.paper} elevation={3}>\n                                    <Image\n                                        src={`${IMAGES_PATH}${item.poster_path}`}\n                                    />\n                                    <Typography component=\"legend\">Rating {item.vote_average}</Typography>\n                                </Paper>\n                            </Link>\n                    </Grid>\n                )}\n            </Grid>\n            <DetailDialog \n                open={detail} \n                handleClickOpen={() => openDetail(true) }  \n                handleClose={() => openDetail(false) }  \n                movie={currentMovie}\n            />\n   \n        </div>\n    )\n  \n}\n\n","import './App.css';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport Search from './component/search';\n\nconst theme = createMuiTheme( {\n    palette: {\n    type: 'dark',\n  }\n});\n\nfunction App() {\n  const queryClient = new QueryClient();\n  return (\n    <MuiThemeProvider theme={theme}>\n      <QueryClientProvider client={queryClient}>\n        <div className=\"App\">\n          <Search />\n        </div>\n      </QueryClientProvider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}